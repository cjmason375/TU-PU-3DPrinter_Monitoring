<html>
<head>
<title>MTCSoundData.py</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<style type="text/css">
.s0 { color: #7a7e85;}
.s1 { color: #bcbec4;}
.s2 { color: #cf8e6d;}
.s3 { color: #bcbec4;}
.s4 { color: #6aab73;}
.s5 { color: #2aacb8;}
</style>
</head>
<body bgcolor="#1e1f22">
<table CELLSPACING=0 CELLPADDING=5 COLS=1 WIDTH="100%" BGCOLOR="#606060" >
<tr><td><center>
<font face="Arial, Helvetica" color="#000000">
MTCSoundData.py</font>
</center></td></tr></table>
<pre><span class="s0"># MTConnect sound collector from sub-agent</span>
<span class="s0"># Coded by Eunseob Kim</span>
<span class="s0"># Updated on July 19, 2022</span>


<span class="s2">import </span><span class="s1">os</span>
<span class="s2">import </span><span class="s1">sys</span>
<span class="s2">import </span><span class="s1">time</span>
<span class="s2">import </span><span class="s1">math</span>
<span class="s2">import </span><span class="s1">datetime</span>
<span class="s2">import </span><span class="s1">requests</span>
<span class="s2">import </span><span class="s1">numpy </span><span class="s2">as </span><span class="s1">np</span>
<span class="s2">from </span><span class="s1">xml</span><span class="s3">.</span><span class="s1">etree </span><span class="s2">import </span><span class="s1">ElementTree </span><span class="s2">as </span><span class="s1">ET</span>
<span class="s2">import </span><span class="s1">scipy</span><span class="s3">.</span><span class="s1">io</span><span class="s3">.</span><span class="s1">wavfile</span>
<span class="s2">from </span><span class="s1">multiprocessing </span><span class="s2">import </span><span class="s1">Process</span>
<span class="s2">import </span><span class="s1">urllib3</span>


<span class="s0">## == CONST ==</span>
<span class="s1">SAMPLE </span><span class="s3">= </span><span class="s4">&quot;sample&quot; </span><span class="s0"># sample string</span>
<span class="s1">CURRENT </span><span class="s3">= </span><span class="s4">&quot;current&quot; </span><span class="s0"># current string</span>
<span class="s1">SAMP_RATE </span><span class="s3">= </span><span class="s5">48000</span>
<span class="s1">CHUNK </span><span class="s3">= </span><span class="s5">2 </span><span class="s3">** </span><span class="s5">11</span>
<span class="s0">## ==</span>


<span class="s2">def </span><span class="s1">createFolder</span><span class="s3">(</span><span class="s1">directory</span><span class="s3">):</span>
    <span class="s2">try</span><span class="s3">:</span>
        <span class="s2">if not </span><span class="s1">os</span><span class="s3">.</span><span class="s1">path</span><span class="s3">.</span><span class="s1">exists</span><span class="s3">(</span><span class="s1">directory</span><span class="s3">):</span>
            <span class="s1">os</span><span class="s3">.</span><span class="s1">makedirs</span><span class="s3">(</span><span class="s1">directory</span><span class="s3">)</span>
    <span class="s2">except </span><span class="s1">OSError</span><span class="s3">:</span>
        <span class="s1">print</span><span class="s3">(</span><span class="s4">'Error: Creating directory. ' </span><span class="s3">+ </span><span class="s1">directory</span><span class="s3">)</span>


<span class="s2">class </span><span class="s1">TimeFormat</span><span class="s3">(</span><span class="s1">object</span><span class="s3">):</span>
    <span class="s2">def </span><span class="s1">__init__</span><span class="s3">(</span><span class="s1">self</span><span class="s3">, </span><span class="s1">time</span><span class="s3">):</span>
        <span class="s1">self</span><span class="s3">.</span><span class="s1">timeUTC </span><span class="s3">= </span><span class="s1">datetime</span><span class="s3">.</span><span class="s1">datetime</span><span class="s3">.</span><span class="s1">strptime</span><span class="s3">(</span><span class="s1">time</span><span class="s3">[:-</span><span class="s5">1</span><span class="s3">], </span><span class="s4">&quot;%Y-%m-%dT%H:%M:%S.%f&quot;</span><span class="s3">)</span>
        <span class="s1">self</span><span class="s3">.</span><span class="s1">timeLOCAL </span><span class="s3">= </span><span class="s1">self</span><span class="s3">.</span><span class="s1">timeUTC</span><span class="s3">.</span><span class="s1">replace</span><span class="s3">(</span><span class="s1">tzinfo</span><span class="s3">=</span><span class="s1">datetime</span><span class="s3">.</span><span class="s1">timezone</span><span class="s3">.</span><span class="s1">utc</span><span class="s3">).</span><span class="s1">astimezone</span><span class="s3">(</span><span class="s1">tz</span><span class="s3">=</span><span class="s2">None</span><span class="s3">)</span>

    <span class="s2">def </span><span class="s1">utc</span><span class="s3">(</span><span class="s1">self</span><span class="s3">):</span>
        <span class="s2">return </span><span class="s1">datetime</span><span class="s3">.</span><span class="s1">datetime</span><span class="s3">.</span><span class="s1">strftime</span><span class="s3">(</span><span class="s1">self</span><span class="s3">.</span><span class="s1">timeUTC</span><span class="s3">, </span><span class="s4">'%Y%m%d_%H%M%S.%fZ'</span><span class="s3">)</span>

    <span class="s2">def </span><span class="s1">local</span><span class="s3">(</span><span class="s1">self</span><span class="s3">):</span>
        <span class="s2">return </span><span class="s1">datetime</span><span class="s3">.</span><span class="s1">datetime</span><span class="s3">.</span><span class="s1">strftime</span><span class="s3">(</span><span class="s1">self</span><span class="s3">.</span><span class="s1">timeLOCAL</span><span class="s3">, </span><span class="s4">'%Y%m%d_%H%M%S.%f'</span><span class="s3">)</span>

<span class="s2">def </span><span class="s1">recording</span><span class="s3">(</span><span class="s1">times</span><span class="s3">, </span><span class="s1">agent</span><span class="s3">, </span><span class="s1">sensor</span><span class="s3">, </span><span class="s1">startSeq</span><span class="s3">, </span><span class="s1">lengthSeq</span><span class="s3">, </span><span class="s1">MTCONNECT_STR</span><span class="s3">, </span><span class="s1">name</span><span class="s3">, </span><span class="s1">timezone</span><span class="s3">):</span>
 <span class="s2">for </span><span class="s1">j </span><span class="s2">in </span><span class="s1">range</span><span class="s3">(</span><span class="s1">times</span><span class="s3">):</span>
        <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;</span><span class="s2">\n</span><span class="s4">========== {}th collection from {} has started. ==========&quot;</span><span class="s3">.</span><span class="s1">format</span><span class="s3">(</span><span class="s1">j</span><span class="s3">+</span><span class="s5">1</span><span class="s3">,</span><span class="s1">sensor</span><span class="s3">))</span>
        <span class="s1">url_updated </span><span class="s3">= </span><span class="s1">agent</span><span class="s3">+</span><span class="s4">&quot;?from=&quot;</span><span class="s3">+</span><span class="s1">str</span><span class="s3">(</span><span class="s1">startSeq</span><span class="s3">)+</span><span class="s4">&quot;&amp;path=//DataItem[@id=%27&quot;</span><span class="s3">+</span><span class="s1">str</span><span class="s3">(</span><span class="s1">sensor</span><span class="s3">)+</span><span class="s4">&quot;%27]&quot;</span>
        <span class="s1">response </span><span class="s3">= </span><span class="s1">requests</span><span class="s3">.</span><span class="s1">get</span><span class="s3">(</span><span class="s1">url_updated</span><span class="s3">)</span>
        <span class="s1">root </span><span class="s3">= </span><span class="s1">ET</span><span class="s3">.</span><span class="s1">fromstring</span><span class="s3">(</span><span class="s1">response</span><span class="s3">.</span><span class="s1">content</span><span class="s3">)</span>
        <span class="s1">header </span><span class="s3">= </span><span class="s1">root</span><span class="s3">.</span><span class="s1">find</span><span class="s3">(</span><span class="s4">&quot;./&quot;</span><span class="s3">+</span><span class="s1">MTCONNECT_STR</span><span class="s3">+</span><span class="s4">&quot;Header&quot;</span><span class="s3">)</span>
        <span class="s1">header_attribs </span><span class="s3">= </span><span class="s1">header</span><span class="s3">.</span><span class="s1">attrib</span>
        <span class="s1">nextSeq </span><span class="s3">= </span><span class="s1">int</span><span class="s3">(</span><span class="s1">header_attribs</span><span class="s3">[</span><span class="s4">&quot;nextSequence&quot;</span><span class="s3">]) </span><span class="s0"># get next sequence</span>

        <span class="s1">i </span><span class="s3">= </span><span class="s5">0 </span><span class="s0"># ith sequence index</span>
        <span class="s1">array </span><span class="s3">= [] </span><span class="s0"># initialize array</span>


        <span class="s2">while </span><span class="s1">lengthSeq </span><span class="s3">&gt; </span><span class="s1">i </span><span class="s3">- </span><span class="s5">1</span><span class="s3">:</span>
            <span class="s2">try</span><span class="s3">:</span>
                <span class="s1">response </span><span class="s3">= </span><span class="s1">requests</span><span class="s3">.</span><span class="s1">get</span><span class="s3">(</span><span class="s1">url_updated</span><span class="s3">)</span>
                <span class="s1">root </span><span class="s3">= </span><span class="s1">ET</span><span class="s3">.</span><span class="s1">fromstring</span><span class="s3">(</span><span class="s1">response</span><span class="s3">.</span><span class="s1">content</span><span class="s3">)</span>
                <span class="s1">header </span><span class="s3">= </span><span class="s1">root</span><span class="s3">.</span><span class="s1">find</span><span class="s3">(</span><span class="s4">&quot;./&quot;</span><span class="s3">+</span><span class="s1">MTCONNECT_STR</span><span class="s3">+</span><span class="s4">&quot;Header&quot;</span><span class="s3">)</span>
                <span class="s1">header_attribs </span><span class="s3">= </span><span class="s1">header</span><span class="s3">.</span><span class="s1">attrib</span>
                <span class="s1">nextSeq </span><span class="s3">= </span><span class="s1">int</span><span class="s3">(</span><span class="s1">header_attribs</span><span class="s3">[</span><span class="s4">&quot;nextSequence&quot;</span><span class="s3">]) </span><span class="s0"># get next sequence</span>

                <span class="s2">for </span><span class="s1">sample </span><span class="s2">in </span><span class="s1">root</span><span class="s3">.</span><span class="s1">iter</span><span class="s3">(</span><span class="s1">MTCONNECT_STR</span><span class="s3">+</span><span class="s4">&quot;DisplacementTimeSeries&quot;</span><span class="s3">):</span>
                    <span class="s1">i </span><span class="s3">+= </span><span class="s5">1</span>
                    <span class="s2">if </span><span class="s1">i </span><span class="s3">== </span><span class="s5">1</span><span class="s3">:</span>
                        <span class="s1">timestamp </span><span class="s3">= </span><span class="s1">sample</span><span class="s3">.</span><span class="s1">get</span><span class="s3">(</span><span class="s4">'timestamp'</span><span class="s3">)</span>
                        <span class="s2">if </span><span class="s1">timezone </span><span class="s3">== </span><span class="s4">&quot;local&quot;</span><span class="s3">:</span>
                            <span class="s1">timestr </span><span class="s3">= </span><span class="s1">TimeFormat</span><span class="s3">(</span><span class="s1">timestamp</span><span class="s3">).</span><span class="s1">local</span><span class="s3">()</span>
                        <span class="s2">else</span><span class="s3">:</span>
                            <span class="s1">timestr </span><span class="s3">= </span><span class="s1">TimeFormat</span><span class="s3">(</span><span class="s1">timestamp</span><span class="s3">).</span><span class="s1">utc</span><span class="s3">()</span>
                        <span class="s1">filename </span><span class="s3">= </span><span class="s4">&quot;_&quot;</span><span class="s3">.</span><span class="s1">join</span><span class="s3">([</span><span class="s1">timestr</span><span class="s3">,</span><span class="s1">name</span><span class="s3">,</span><span class="s1">sensor</span><span class="s3">])</span>
                        <span class="s1">wav_output_filename </span><span class="s3">= </span><span class="s4">&quot;.&quot;</span><span class="s3">.</span><span class="s1">join</span><span class="s3">([</span><span class="s1">filename</span><span class="s3">,</span><span class="s4">&quot;wav&quot;</span><span class="s3">])</span>
                        <span class="s1">chunk </span><span class="s3">= </span><span class="s1">np</span><span class="s3">.</span><span class="s1">fromstring</span><span class="s3">(</span><span class="s1">sample</span><span class="s3">.</span><span class="s1">text</span><span class="s3">, </span><span class="s1">dtype</span><span class="s3">=</span><span class="s1">np</span><span class="s3">.</span><span class="s1">int16</span><span class="s3">, </span><span class="s1">sep</span><span class="s3">=</span><span class="s4">' '</span><span class="s3">)</span>
                        <span class="s1">array</span><span class="s3">.</span><span class="s1">append</span><span class="s3">(</span><span class="s1">chunk</span><span class="s3">)</span>
                    <span class="s2">else</span><span class="s3">:</span>
                        <span class="s2">if </span><span class="s1">lengthSeq </span><span class="s3">== </span><span class="s1">i </span><span class="s3">- </span><span class="s5">1</span><span class="s3">:</span>
                            <span class="s1">sequence </span><span class="s3">= </span><span class="s1">sample</span><span class="s3">.</span><span class="s1">get</span><span class="s3">(</span><span class="s4">'sequence'</span><span class="s3">)</span>
                        <span class="s2">elif </span><span class="s1">lengthSeq </span><span class="s3">&lt; </span><span class="s1">i </span><span class="s3">- </span><span class="s5">1</span><span class="s3">:</span>
                                <span class="s2">pass</span>
                        <span class="s2">else</span><span class="s3">:</span>
                            <span class="s2">try</span><span class="s3">:</span>
                                <span class="s1">chunk </span><span class="s3">= </span><span class="s1">np</span><span class="s3">.</span><span class="s1">fromstring</span><span class="s3">(</span><span class="s1">sample</span><span class="s3">.</span><span class="s1">text</span><span class="s3">, </span><span class="s1">dtype</span><span class="s3">=</span><span class="s1">np</span><span class="s3">.</span><span class="s1">int16</span><span class="s3">, </span><span class="s1">sep</span><span class="s3">=</span><span class="s4">' '</span><span class="s3">)</span>
                                <span class="s1">array</span><span class="s3">.</span><span class="s1">append</span><span class="s3">(</span><span class="s1">chunk</span><span class="s3">)</span>
                            <span class="s2">except </span><span class="s1">Exception </span><span class="s2">as </span><span class="s1">e</span><span class="s3">:</span>
                                <span class="s1">print</span><span class="s3">(</span><span class="s1">e</span><span class="s3">)</span>
                                <span class="s1">i </span><span class="s3">-= </span><span class="s5">1</span>
                                <span class="s2">continue</span>
                <span class="s1">time</span><span class="s3">.</span><span class="s1">sleep</span><span class="s3">(</span><span class="s5">1</span><span class="s3">)</span>
                <span class="s1">url_updated </span><span class="s3">= </span><span class="s1">agent</span><span class="s3">+</span><span class="s4">&quot;?from=&quot;</span><span class="s3">+</span><span class="s1">str</span><span class="s3">(</span><span class="s1">nextSeq</span><span class="s3">)+</span><span class="s4">&quot;&amp;path=//DataItem[@id=%27&quot;</span><span class="s3">+</span><span class="s1">sensor</span><span class="s3">+</span><span class="s4">&quot;%27]&quot;</span>

            <span class="s2">except </span><span class="s1">KeyboardInterrupt</span><span class="s3">:</span>
                <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;Stopping collecting...&quot;</span><span class="s3">)</span>
                <span class="s2">break</span>

        <span class="s1">data </span><span class="s3">= </span><span class="s1">np</span><span class="s3">.</span><span class="s1">concatenate</span><span class="s3">(</span><span class="s1">array</span><span class="s3">, </span><span class="s1">axis </span><span class="s3">= </span><span class="s5">0</span><span class="s3">)</span>
        <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;{}: {}th collection is done ({:.2f} seconds, {})&quot;</span><span class="s3">.</span><span class="s1">format</span><span class="s3">(</span><span class="s1">sensor</span><span class="s3">,</span><span class="s1">j</span><span class="s3">+</span><span class="s5">1</span><span class="s3">,</span><span class="s1">len</span><span class="s3">(</span><span class="s1">data</span><span class="s3">)/</span><span class="s1">SAMP_RATE</span><span class="s3">,</span><span class="s1">wav_output_filename</span><span class="s3">))</span>

        <span class="s1">scipy</span><span class="s3">.</span><span class="s1">io</span><span class="s3">.</span><span class="s1">wavfile</span><span class="s3">.</span><span class="s1">write</span><span class="s3">(</span><span class="s1">wav_output_filename</span><span class="s3">, </span><span class="s1">SAMP_RATE</span><span class="s3">, </span><span class="s1">data</span><span class="s3">.</span><span class="s1">astype</span><span class="s3">(</span><span class="s1">np</span><span class="s3">.</span><span class="s1">int16</span><span class="s3">))</span>
        <span class="s1">startSeq </span><span class="s3">= </span><span class="s1">int</span><span class="s3">(</span><span class="s1">sequence</span><span class="s3">)</span>

<span class="s2">if </span><span class="s1">__name__ </span><span class="s3">== </span><span class="s4">&quot;__main__&quot;</span><span class="s3">:</span>
    <span class="s1">args </span><span class="s3">= </span><span class="s1">sys</span><span class="s3">.</span><span class="s1">argv</span><span class="s3">[</span><span class="s5">1</span><span class="s3">:]</span>

    <span class="s2">if </span><span class="s1">len</span><span class="s3">(</span><span class="s1">args</span><span class="s3">) != </span><span class="s5">5</span><span class="s3">:</span>
        <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;&lt;Usage error!&gt;&quot;</span><span class="s3">)</span>
        <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;&lt; direction &gt; $ python3 program.py IP:Port name timezone record_time(sec) total_time(sec)&quot;</span><span class="s3">)</span>
        <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;&lt;description&gt; arguments: IP:Port:str, name:str, timezon:str (local or UTC), record_time:Int (second), total_time:Int (second)&quot;</span><span class="s3">)</span>
        <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;&lt;  example  &gt; $ python3 sound_collector.py 127.0.0.1:5001 VM20i local 3600 36000&quot;</span><span class="s3">)</span>
        <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;&lt;description&gt; For 10 hours (total time), 10 wav files will be generated of 1-hour long from the localhost with specified timezone (local or UTC).&quot;</span><span class="s3">)</span>
        <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;title example: yyyyMMdd_HHmmss.fZ_VM20i_sensor0.wav&quot;</span><span class="s3">)</span>
        <span class="s1">sys</span><span class="s3">.</span><span class="s1">exit</span><span class="s3">()</span>
    <span class="s2">else</span><span class="s3">:</span>
        <span class="s1">IP_Port </span><span class="s3">= </span><span class="s1">args</span><span class="s3">[</span><span class="s5">0</span><span class="s3">]</span>
        <span class="s1">name </span><span class="s3">= </span><span class="s1">args</span><span class="s3">[</span><span class="s5">1</span><span class="s3">]</span>
        <span class="s1">timezone </span><span class="s3">= </span><span class="s1">args</span><span class="s3">[</span><span class="s5">2</span><span class="s3">]</span>
        <span class="s1">recordtime </span><span class="s3">= </span><span class="s1">int</span><span class="s3">(</span><span class="s1">args</span><span class="s3">[</span><span class="s5">3</span><span class="s3">])</span>
        <span class="s1">totaltime </span><span class="s3">= </span><span class="s1">int</span><span class="s3">(</span><span class="s1">args</span><span class="s3">[</span><span class="s5">4</span><span class="s3">])</span>

    <span class="s1">times </span><span class="s3">= </span><span class="s1">math</span><span class="s3">.</span><span class="s1">ceil</span><span class="s3">(</span><span class="s1">totaltime</span><span class="s3">/</span><span class="s1">recordtime</span><span class="s3">)</span>

    <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;Sound Collection Info.:</span><span class="s2">\n</span><span class="s4">&quot;</span><span class="s3">,</span>
          <span class="s4">&quot;Machine (name):&quot;</span><span class="s3">, </span><span class="s1">name</span><span class="s3">, </span><span class="s4">&quot;</span><span class="s2">\n</span><span class="s4">&quot;</span><span class="s3">,</span>
          <span class="s4">&quot;Timezone (title):&quot;</span><span class="s3">, </span><span class="s1">timezone</span><span class="s3">, </span><span class="s4">&quot;</span><span class="s2">\n</span><span class="s4">&quot;</span><span class="s3">,</span>
          <span class="s4">&quot;Each file length:&quot;</span><span class="s3">, </span><span class="s1">recordtime</span><span class="s3">, </span><span class="s4">&quot;[sec]</span><span class="s2">\n</span><span class="s4">&quot;</span><span class="s3">,</span>
          <span class="s4">&quot;Total length:&quot;</span><span class="s3">, </span><span class="s1">totaltime</span><span class="s3">, </span><span class="s4">&quot;[sec]</span><span class="s2">\n</span><span class="s4">&quot;</span><span class="s3">,</span>
                    <span class="s4">&quot;Number of files:&quot;</span><span class="s3">, </span><span class="s1">times</span><span class="s3">)</span>
    <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;========== collection started ==========</span><span class="s2">\n</span><span class="s4">&quot;</span><span class="s3">)</span>

<span class="s0">#    path = '/Users/dee-dee/PycharmProjects/MTC/Sound Data/'</span>
<span class="s0">#    directory = path + datetime.datetime.today().strftime('%y%m%d')</span>
<span class="s0">#    print(&quot;Data directory:&quot;,directory)</span>
<span class="s0">#    createFolder(directory)</span>
<span class="s0">#    os.chdir(directory)</span>

    <span class="s1">agent </span><span class="s3">= </span><span class="s4">&quot;http://&quot;</span><span class="s3">+</span><span class="s1">IP_Port</span><span class="s3">+</span><span class="s4">&quot;/&quot; </span><span class="s0"># MTConnect agent server .. args</span>
    <span class="s1">response </span><span class="s3">= </span><span class="s1">requests</span><span class="s3">.</span><span class="s1">get</span><span class="s3">(</span><span class="s1">agent</span><span class="s3">+</span><span class="s1">CURRENT</span><span class="s3">) </span><span class="s0"># get XML response</span>
    <span class="s1">root </span><span class="s3">= </span><span class="s1">ET</span><span class="s3">.</span><span class="s1">fromstring</span><span class="s3">(</span><span class="s1">response</span><span class="s3">.</span><span class="s1">content</span><span class="s3">) </span><span class="s0"># XML Parsing</span>

    <span class="s1">MTCONNECT_STR </span><span class="s3">= </span><span class="s1">root</span><span class="s3">.</span><span class="s1">tag</span><span class="s3">.</span><span class="s1">split</span><span class="s3">(</span><span class="s4">&quot;}&quot;</span><span class="s3">)[</span><span class="s5">0</span><span class="s3">]+</span><span class="s4">&quot;}&quot;</span>
    <span class="s1">header </span><span class="s3">= </span><span class="s1">root</span><span class="s3">.</span><span class="s1">find</span><span class="s3">(</span><span class="s4">&quot;./&quot;</span><span class="s3">+</span><span class="s1">MTCONNECT_STR</span><span class="s3">+</span><span class="s4">&quot;Header&quot;</span><span class="s3">) </span><span class="s0"># Find Header root to find</span>
    <span class="s1">header_attribs </span><span class="s3">= </span><span class="s1">header</span><span class="s3">.</span><span class="s1">attrib </span><span class="s0"># attribute of header</span>

    <span class="s1">nextSeq </span><span class="s3">= </span><span class="s1">int</span><span class="s3">(</span><span class="s1">header_attribs</span><span class="s3">[</span><span class="s4">&quot;nextSequence&quot;</span><span class="s3">]) </span><span class="s0"># get next sequence</span>
    <span class="s1">firstSeq </span><span class="s3">= </span><span class="s1">int</span><span class="s3">(</span><span class="s1">header_attribs</span><span class="s3">[</span><span class="s4">&quot;firstSequence&quot;</span><span class="s3">]) </span><span class="s0"># get first sequence</span>
    <span class="s1">lastSeq </span><span class="s3">= </span><span class="s1">int</span><span class="s3">(</span><span class="s1">header_attribs</span><span class="s3">[</span><span class="s4">&quot;lastSequence&quot;</span><span class="s3">]) </span><span class="s0"># get last sequence</span>

    <span class="s1">devices </span><span class="s3">= [] </span><span class="s0"># devices list</span>
    <span class="s1">sensors </span><span class="s3">= [] </span><span class="s0"># sensors list</span>
    <span class="s2">for </span><span class="s1">device </span><span class="s2">in </span><span class="s1">root</span><span class="s3">.</span><span class="s1">iter</span><span class="s3">(</span><span class="s1">MTCONNECT_STR</span><span class="s3">+</span><span class="s4">&quot;DeviceStream&quot;</span><span class="s3">):</span>
        <span class="s1">deviceName </span><span class="s3">= </span><span class="s1">device</span><span class="s3">.</span><span class="s1">get</span><span class="s3">(</span><span class="s4">'name'</span><span class="s3">) </span><span class="s0"># get Device name</span>
        <span class="s1">devices</span><span class="s3">.</span><span class="s1">append</span><span class="s3">(</span><span class="s1">deviceName</span><span class="s3">)</span>
        <span class="s1">print</span><span class="s3">(</span><span class="s4">'Device name:'</span><span class="s3">,</span><span class="s1">devices</span><span class="s3">)</span>
        <span class="s2">for </span><span class="s1">sample </span><span class="s2">in </span><span class="s1">device</span><span class="s3">.</span><span class="s1">iter</span><span class="s3">(</span><span class="s1">MTCONNECT_STR</span><span class="s3">+</span><span class="s4">&quot;DisplacementTimeSeries&quot;</span><span class="s3">): </span><span class="s0"># get Sensor name</span>
            <span class="s1">sensorName </span><span class="s3">= </span><span class="s1">sample</span><span class="s3">.</span><span class="s1">get</span><span class="s3">(</span><span class="s4">'name'</span><span class="s3">)</span>
            <span class="s1">sensors</span><span class="s3">.</span><span class="s1">append</span><span class="s3">(</span><span class="s1">sensorName</span><span class="s3">)</span>
            <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;Sensor name:&quot;</span><span class="s3">,</span><span class="s1">sensorName</span><span class="s3">)</span>

    <span class="s1">startSeq </span><span class="s3">= </span><span class="s1">lastSeq </span><span class="s0"># start sequence is the last sequence (lastest sequence)</span>

    <span class="s1">lengthSeq </span><span class="s3">= </span><span class="s1">int</span><span class="s3">(</span><span class="s1">recordtime </span><span class="s3">/ (</span><span class="s1">CHUNK </span><span class="s3">/ </span><span class="s1">SAMP_RATE</span><span class="s3">)) </span><span class="s0"># total length of the sequence</span>

    <span class="s1">procs </span><span class="s3">= [] </span><span class="s0"># multi-process list</span>

    <span class="s2">for </span><span class="s1">i </span><span class="s2">in </span><span class="s1">range</span><span class="s3">(</span><span class="s1">len</span><span class="s3">(</span><span class="s1">sensors</span><span class="s3">)): </span><span class="s0"># setting up starting multi processes</span>
        <span class="s1">proc </span><span class="s3">= </span><span class="s1">Process</span><span class="s3">(</span><span class="s1">target</span><span class="s3">=</span><span class="s1">recording</span><span class="s3">, </span><span class="s1">args</span><span class="s3">=(</span><span class="s1">times</span><span class="s3">, </span><span class="s1">agent</span><span class="s3">+</span><span class="s1">SAMPLE</span><span class="s3">, </span><span class="s1">sensors</span><span class="s3">[</span><span class="s1">i</span><span class="s3">], </span><span class="s1">startSeq</span><span class="s3">, </span><span class="s1">lengthSeq</span><span class="s3">, </span><span class="s1">MTCONNECT_STR</span><span class="s3">, </span><span class="s1">name</span><span class="s3">, </span><span class="s1">timezone</span><span class="s3">))</span>
        <span class="s1">procs</span><span class="s3">.</span><span class="s1">append</span><span class="s3">(</span><span class="s1">proc</span><span class="s3">)</span>
        <span class="s1">proc</span><span class="s3">.</span><span class="s1">start</span><span class="s3">()</span>

    <span class="s2">for </span><span class="s1">proc </span><span class="s2">in </span><span class="s1">procs</span><span class="s3">: </span><span class="s0"># merging all multi processes</span>
        <span class="s1">proc</span><span class="s3">.</span><span class="s1">join</span><span class="s3">()</span>

    <span class="s1">print</span><span class="s3">(</span><span class="s4">&quot;Collection Done!&quot;</span><span class="s3">)</span></pre>
</body>
</html>
